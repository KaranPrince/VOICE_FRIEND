// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_voice_friend/test/services/audio_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_voice_friend/utils/tts_openai_interface.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TextToSpeechOpenAI].
///
/// See the documentation for Mockito's code generation for more information.
class MockTextToSpeechOpenAI extends _i1.Mock
    implements _i2.TextToSpeechOpenAI {
  MockTextToSpeechOpenAI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<Exception> get errorStream => (super.noSuchMethod(
        Invocation.getter(#errorStream),
        returnValue: _i3.Stream<Exception>.empty(),
      ) as _i3.Stream<Exception>);

  @override
  bool isPlaying() => (super.noSuchMethod(
        Invocation.method(
          #isPlaying,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool hasAudioToPlay() => (super.noSuchMethod(
        Invocation.method(
          #hasAudioToPlay,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  double getCurrentIntensity() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentIntensity,
          [],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  String getSubtitles() => (super.noSuchMethod(
        Invocation.method(
          #getSubtitles,
          [],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #getSubtitles,
            [],
          ),
        ),
      ) as String);

  @override
  void stop() => super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setVoiceSpeed(double? voiceSpeed) => super.noSuchMethod(
        Invocation.method(
          #setVoiceSpeed,
          [voiceSpeed],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateVoice(String? voice) => super.noSuchMethod(
        Invocation.method(
          #updateVoice,
          [voice],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> playTextToSpeech(String? text) => (super.noSuchMethod(
        Invocation.method(
          #playTextToSpeech,
          [text],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool lastAudioToPlay() => (super.noSuchMethod(
        Invocation.method(
          #lastAudioToPlay,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void repeat() => super.noSuchMethod(
        Invocation.method(
          #repeat,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void next() => super.noSuchMethod(
        Invocation.method(
          #next,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleAutoPause() => super.noSuchMethod(
        Invocation.method(
          #toggleAutoPause,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> initializePlayer() => (super.noSuchMethod(
        Invocation.method(
          #initializePlayer,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void deinitializePlayer() => super.noSuchMethod(
        Invocation.method(
          #deinitializePlayer,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
